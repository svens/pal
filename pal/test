#pragma once // -*- C++ -*-

#define CATCH_CONFIG_FAST_COMPILE
#include <catch2/catch.hpp>
#include <string>

#include <pal/__bits/lib>
#if __pal_os_linux
	#include <openssl/crypto.h>
#endif


namespace pal_test {


inline std::string case_name ()
{
	return Catch::getResultCapture().getCurrentTestName();
}


bool has_ci_environment_variable ();
inline const bool on_ci = has_ci_environment_variable();


struct bad_alloc_once
{
	static inline bool fail = false;

	bad_alloc_once () noexcept
	{
		fail = true;
	}

	~bad_alloc_once () noexcept
	{
		fail = false;
	}
};


template <typename... T>
constexpr void unused (T...)
{ }


constexpr bool has_crypto_alloc_hook =
#if OPENSSL_VERSION_NUMBER >= 0x10100000
	true
#else
	false
#endif
;


} // namespace pal_test
