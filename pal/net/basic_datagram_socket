#pragma once // -*- C++ -*-

/**
 * \file pal/net/basic_datagram_socket
 * Generic datagram-oriented socket
 */

#include <pal/net/basic_socket>

namespace pal::net {

template <typename Protocol>
class basic_datagram_socket: public basic_socket<Protocol>
{
public:

	using typename basic_socket<Protocol>::protocol_type;
	using typename basic_socket<Protocol>::endpoint_type;
};

/// Create new datagram socket of \a Protocol
template <typename Protocol>
result<basic_datagram_socket<Protocol>> make_datagram_socket (const Protocol &protocol) noexcept
{
	return open(protocol.family(), protocol.type(), protocol.protocol())
		.and_then(socket_base::make_impl(protocol))
		.transform(socket_base::to_api<basic_datagram_socket<Protocol>>())
	;
}

} // namespace pal::net
