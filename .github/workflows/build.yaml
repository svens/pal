on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest

    strategy:
      matrix:
        os: [macos, ubuntu]
        compiler: [clang, gcc]
        include:
          - os: windows
            compiler: msvc

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          case "${{ matrix.os }}" in
            linux|macos)
              brew install ninja-build
              ;;
          esac

      - name: Setup devenv
        run: |
          case "${{ matrix.compiler }}" in
            clang)
              echo '::set-env name=CC::clang'
              echo '::set-env name=CXX::clang++'
              echo '::set-env name=CMAKE_BUILD_GENERATOR::"Ninja Multi-Config"'
              ;;
            gcc)
              echo '::set-env name=CC::gcc-9'
              echo '::set-env name=CXX::g++-9'
              echo '::set-env name=CMAKE_BUILD_GENERATOR::"Ninja Multi-Config"'
              ;;
            msvc)
              echo '::set-env name=CMAKE_BUILD_GENERATOR::"Visual Studio 15 2017 Win64"'
              ;;
          esac

      - name: Generate buildsystem
        run: cmake .. -G "${CMAKE_BUILD_GENERATOR}" -DCMAKE_CONFIGURATION_TYPES="Debug;Release"

      - name: Debug build/test
        run: |
          cmake --build . --config Debug
          ctest -C Debug --output-on-failure
