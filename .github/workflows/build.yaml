on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest

    strategy:
      matrix:
        os: [macos, ubuntu]
        compiler: [clang, gcc]
        build_type: [Debug, Release]
        include:
          - os: windows
            build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          case "${{ matrix.compiler }}" in
            macos|ubuntu)
              brew install ninja
              ;;
          esac

      - name: Setup devenv
        run: |
          case "${{ matrix.compiler }}" in
            clang)
              echo '::set-env name=CC::clang'
              echo '::set-env name=CXX::clang++'
              ;;
            gcc)
              echo '::set-env name=CC::gcc-9'
              echo '::set-env name=CXX::g++-9'
              ;;
          esac

      - name: Generate buildsystem
        run: cmake . -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Test
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure
