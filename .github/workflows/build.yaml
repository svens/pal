on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  #build:
  #  runs-on: ${{ matrix.os }}-latest

  #  strategy:
  #    matrix:
  #      os: [macos, ubuntu]
  #      compiler: [clang, gcc]
  #      build_type: [Debug, Release]
  #      include:
  #        - { os: windows, build_type: Debug }
  #        - { os: windows, build_type: Release }

  #  steps:
  #    - uses: actions/checkout@v2

  #    - name: Setup devenv
  #      run: |
  #        case "${{ matrix.compiler }}" in
  #          clang)
  #            echo '::set-env name=CC::clang'
  #            echo '::set-env name=CXX::clang++'
  #            ;;
  #          gcc)
  #            echo '::set-env name=CC::gcc-9'
  #            echo '::set-env name=CXX::g++-9'
  #            ;;
  #        esac

  #    - name: Generate buildsystem
  #      run: cmake . -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

  #    - name: Build
  #      run: cmake --build . --config ${{ matrix.build_type }}

  #    - name: Test
  #      run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

  coverage:
    #needs: build
    runs-on: ubuntu-latest

    env:
      CC: gcc-9
      CXX: g++-9
      COV: gcov-9

    steps:
      #- uses: actions/checkout@v2

      - name: install lcov (#1)
        run: brew install lcov

      - name: install lcov (#2)
        run: brew install lcov

      - name: ls lcov
        run: brew ls --verbose lcov

      - name: link lcov
        run: brew link --debug --verbose lcov

      - name: which lcov
        run: which lcov

      - name: lcov version
        run: lcov --version

      #- name: Generate buildsystem
      #  run: cmake . -DCMAKE_BUILD_TYPE=Coverage

      #- name: Build
      #  run: cmake --build . --config Coverage

      #- name: Coverage
      #  run: cmake --build . --target pal-cov

      #- uses: coverallsapp/github-action@master
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}
      #    path-to-lcov: pal.info
